<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SNNS_Core</name>
    </assembly>
    <members>
        <member name="P:SNNS_Core.Core.IsRoundB">
            <summary>
            A轮还是B轮标志
            </summary>
        </member>
        <member name="M:SNNS_Core.Core.Trim">
            <summary>
            压缩部分内存空间
            </summary>
        </member>
        <member name="M:SNNS_Core.Core.Run_TPL(System.Int32)">
            <summary>
            运行网络
            </summary>
            <param name="time">运行时间（ticks）</param>
        </member>
        <member name="M:SNNS_Core.NeuronBase.NeuronStateUpdate">
            <summary>
            更新神经元状态
            </summary>
        </member>
        <member name="M:SNNS_Core.NeuronBase.Update">
            <summary>
            更新神经元信息
            </summary>
        </member>
        <member name="T:SNNS_Core.NeuronGroup`1">
            <summary>
            神经元组
            方便建立网络使用，本身不存储神经元和突触的实例
            </summary>
        </member>
        <member name="P:SNNS_Core.NeuronGroup`1.Neurons">
            <summary>
            神经元数组
            注意该数组中的实例会同时被NeuronsBase中的list保存
            </summary>
        </member>
        <member name="M:SNNS_Core.NeuronGroup`1.#ctor(`0[],System.String)">
            <summary>
            创建神经元组
            </summary>
            <param name="neurons">神经元实例列表</param>
            <param name="name">神经元组名称</param>
        </member>
        <member name="M:SNNS_Core.NeuronGroup`1.#ctor(System.Int32,System.String)">
            <summary>
            创建神经元组
            </summary>
            <param name="length">神经元个数</param>
            <param name="neuronType">神经元类型</param>
            <param name="name">神经元名称</param>
        </member>
        <member name="P:SNNS_Core.NeuronGroup`1.Item(System.Int32)">
            <summary>
            返回该group的第index号神经元
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:SNNS_Core.NeuronGroup`1.Connect(SNNS_Core.NeuronGroup{`0},SNNS_Core.NeuronGroup{`0},System.Int32,System.Int32,SNNS_Core.SynapseBase)">
            <summary>
            连接两个神经元
            </summary>
            <param name="g1">前射的神经元组</param>
            <param name="g2">后射的神经元组</param>
            <param name="i">前射神经元的GroupID</param>
            <param name="j">后射神经元的GroupID</param>
            <param name="synapse">突触的实例</param>
        </member>
        <member name="P:SNNS_Core.SynapseBase.Pre_SynapseID">
            <summary>
            前射神经元的全局ID
            </summary>
        </member>
        <member name="P:SNNS_Core.SynapseBase.ID">
            <summary>
            全局ID
            </summary>
        </member>
        <member name="M:SNNS_Core.SynapseBase.GetReceiptFlag">
            <summary>
            是否接收到脉冲,由神经元调用
            </summary>
        </member>
        <member name="M:SNNS_Core.SynapseBase.OnReceived">
            <summary>
            第一次接受到脉冲的动作
            </summary>
        </member>
        <member name="M:SNNS_Core.SynapseBase.SetReceive">
            <summary>
            设置Receive flag
            此函数仅供Core调用
            对于Core来说，A轮写入Received_A,B轮写B
            对于神经元说，Received_B在A轮才是上一次脉冲结果
            </summary>
        </member>
        <member name="M:SNNS_Core.WorkerGroup.#ctor(System.Int32)">
            <summary>
            ctor
            </summary>
            <param name="count">线程数</param>
        </member>
    </members>
</doc>
